version: '3.7'

services:
  geth-bootnode:
    hostname: geth-bootnode
    env_file:
      - .env
    build:
      dockerfile: Dockerfile
      context: .
    command:
      --nodekeyhex="b0ac22adcad37213c7c565810a50f1772291e7b0ce53fb73e7ec2a3c75bc13b5"
      --nodiscover
      --networkid=${NETWORK_ID}
      --netrestrict="172.16.254.0/28"

    networks:
      private-network:

  geth-rpc-endpoint:
    hostname: geth-rpc-endpoint
    env_file:
      - .env
    build:
      dockerfile: Dockerfile
      context: .
    depends_on:
      - geth-bootnode    
    command:
      --bootnodes="enode://af22c29c316ad069cf48a09a4ad5cf04a251b411e45098888d114c6dd7f489a13786620d5953738762afa13711d4ffb3b19aa5de772d8af72f851f7e9c5b164a@geth-bootnode:30303"
      --allow-insecure-unlock
      --http
      --http.addr="0.0.0.0"
      --http.api="eth,web3,net,admin,personal,debug"
      --http.corsdomain="*"
      --networkid=${NETWORK_ID}
      --netrestrict="172.16.254.0/28"
      --http.vhosts=*
    ports:
      - "8545:8545"
    networks:
      private-network:

  geth-miner:
    hostname: geth-miner
    env_file:
      - .env
    build:
      dockerfile: Dockerfile
      context: .
    depends_on:
      - geth-bootnode
    command:
      --bootnodes="enode://af22c29c316ad069cf48a09a4ad5cf04a251b411e45098888d114c6dd7f489a13786620d5953738762afa13711d4ffb3b19aa5de772d8af72f851f7e9c5b164a@geth-bootnode:30303"
      --mine
      --miner.threads=1
      --networkid=${NETWORK_ID}
      --netrestrict="172.16.254.0/28"
      --miner.etherbase=0x3Ec27977fa85801B011568e01394C5a9D4EB318B
    networks:
      private-network:

  db:
    image: postgres:14-alpine
    restart: always
    container_name: 'postgres'
    command: postgres -c 'max_connections=200'
    environment:
        POSTGRES_PASSWORD: ''
        POSTGRES_USER: 'postgres'
        POSTGRES_HOST_AUTH_METHOD: 'trust'
    volumes:
      - database:/var/lib/postgresql/data/
    networks:
      - private-network
 
  
  redis_db:
    image: 'redis:alpine'
    container_name: redis_db
    command: redis-server
    volumes:
      - redis:/data
    networks:
      - private-network
 

  blockscout:
    depends_on:
      - db
      - redis_db
    image: blockscout/blockscout:4.1.7
    pull_policy: always
    stop_grace_period: 5m
    restart: always
    container_name: 'blockscout'
    links:
      - db:database
    command: bash -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    env_file:
      -  ./blockscount/common-blockscout.env
    environment:
        ETHEREUM_JSONRPC_VARIANT: 'geth'
        ETHEREUM_JSONRPC_HTTP_URL: http://geth-rpc-endpoint:8545
        DATABASE_URL: postgresql://postgres:@db:5432/blockscout?ssl=false
        ECTO_USE_SSL: 'false'
        SECRET_KEY_BASE: '56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN'
        MICROSERVICE_SC_VERIFIER_ENABLED: 'false'
        MICROSERVICE_VISUALIZE_SOL2UML_ENABLED: 'false'
        MICROSERVICE_SIG_PROVIDER_ENABLED: 'false'
    ports:
      - 4000:4000
    networks:
      - private-network
    
      
networks:
  private-network:
    driver: bridge
    ipam:
      config:
      - subnet: 172.16.254.0/28
        
volumes:
  database:
  redis: